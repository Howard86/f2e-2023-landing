---
import { twMerge } from 'tailwind-merge';
import { Icon } from 'astro-icon/components';
import type { ItemGrid } from '~/types';
import Button from './Button.astro';

const { items = [], columns, defaultIcon = '', classes = {} } = Astro.props as ItemGrid;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
  action: actionClass = '',
} = classes;

const getGridCss = (columnCount: number | undefined) => {
  switch (columnCount) {
    case 4:
      return 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2';
    case 3:
      return 'lg:grid-cols-3 sm:grid-cols-2';
    case 2:
      return 'sm:grid-cols-2';
    default:
      return '';
  }
};
---

{
  items && (
    <div class={twMerge(`grid mx-auto gap-8 md:gap-y-12 ${getGridCss(columns)}`, containerClass)}>
      {items.map(({ title, description, icon, callToAction, classes: itemClasses = {} }) => (
        <div>
          <div class={twMerge('flex flex-row max-w-md', panelClass, itemClasses?.panel)}>
            <div class="flex justify-center">
              {(icon || defaultIcon) && (
                <Icon
                  name={icon || defaultIcon}
                  class={twMerge('w-7 h-7 mr-2 rtl:mr-0 rtl:ml-2', defaultIconClass, itemClasses?.icon)}
                />
              )}
            </div>
            <div class="mt-0.5">
              {title && <h3 class={twMerge('text-xl font-bold', titleClass, itemClasses?.title)}>{title}</h3>}
              {description && (
                <p
                  class={twMerge(`${title ? 'mt-3' : ''} text-muted`, descriptionClass, itemClasses?.description)}
                  set:html={description}
                />
              )}
              {callToAction && (
                <div class={twMerge(`${title || description ? 'mt-3' : ''}`, actionClass, itemClasses?.actionClass)}>
                  <Button variant="link" {...callToAction} />
                </div>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  )
}
